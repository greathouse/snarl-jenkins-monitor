import groovy.json.JsonSlurper

ignoredJobs = ['Insurer-CVSToGit-Sync', 'Insurer-Update-Submodules']

appSignature = "green-moon/jenkins"
cachedJobs = [:]
jenkinsConnected = true
greenMoon = "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=="
blueBall = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAJOgAACToB8GSSSgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAASdEVYdFRpdGxlAEZhY2UgLSBQbGFpbhpLHc4AAAAVdEVYdEF1dGhvcgBTdGV2ZW4gR2Fycml0eccFO1EAAAAjdEVYdFNvdXJjZQBodHRwOi8vd3d3LnRhbmdvLXByb2plY3Qub3Jn0Mm+BQAABpNJREFUWIXNl11sHFcZht9zZmZnZne92V27TiLbsZ20pIlL80MpbkVSQoQSkgAXjQsIgbgACSGBRBupF62EIoFUNUigXnARbrhAVUT5UyClFhdBUVviZgtVQK2DExfHTm2vf7L27M7M+edixo4d23EoQuFIr87Z3dnzPvOd73xzhhhjcC8bvafu/w8A9n9ycfeBkx7J+w9nvcyn/Kx7cFt7c2fOczNXx6ar07P1gTjm/YSTytX+E9W7nZPcTQ4QAtLT99KzT+ztfrp3d2e+VMz5ru8iiCRCppFzHUghEQQN+f7oVHDuwruVqRn+pdHXvjf7XwNsPfrDzs72jb/9zlf27czmPbc614AxBsYAQhkwaRAyg0aqpgzFg5t88+v+ysTfBj/47tDvnvnVhwZ4qO8n3/j0J+5/4fih3c2T8w0AChmbgBJAG4BLg1gYNGKDemwwH2nMhwpRxPBwZwH1Wq3x8rnKhfJk7fPnz39fruaxZhJ2HXtxxxcOfvTFowd3NY/MzMGxFIpZilKOoJRP+mKWosmnyHsEWZfAzxB4GQuWbeHilWlcr+nct7647zOjxfyP1vJZFYA89Yq1vav1Nwd6t5fGZuaRzRDkPYpClqCYoyjnKIq55HPTUnOHIOMAjm3BsS1M1mIM3qjbx/bt/FrXkRf23DVADxk/9c2nHr//WnUerg14TmKQ95K7LueTPu8tMbYBxyZwLALLoqCUwqIE/7wxh4621lJXe8uZRx457awLsOXIqW3Hnuj5eiCpLaWGRQHbAhwbcG2CnEdQylHkXALXJnAswKKARQksAlACUEpACQGhBARA/6URHD+0Z2utLfjBugBehhzds7OzNDYdwgCJ0oEBoDUgdZKEJtVCWxia9NqFL8JYolpjdntr4XPrAuSy3iHLcaC0gdIGUgFCAVwCETcIYo3ZukYQa0TCgMvkd6lM+h9AGwNjNLQxixqdCtDdVi6RkyfpHQG2tpW3ztQ5eGrKFrYa0wgig1rD4GZdo9ZItl7IDWKe1AMuASENlFSQSkMpDa00tNYYqwboamvOdV7yt68J0H3gpNfZ1lwanwnBRGIcpQUmiA3mIo2bDY3ZhkatoTEXagSRRoMlxSgWCYgQClIoyCUgtTpDoZDNU+DxpZ7LngU0n+24r5R3b8xFALUQ2hnYFCBEQ2sKLs2yQiQk0uiYWxBMgXEBLiS4kBBiaf2hhNrWrjUBhv2u4evjM1Fx46biVMBBLQoCG9oAUmnEgsCxDAhBWoqTahjyFCJWiGMOxgQYE+A8gQAAAsAYpbSQr6+5BOaXfWp4dGamnM8gjDjCkCGIBOZCjVp4K/w3G2ZxGRaWoh5KhBFDGDNEMUfMEmmdbIWWoo/p2XoAyIE1IwAAI+Oz7xY866EwZDDGQGsNKR0wbsNxLFgUoITAGEBpAyE1uJBgTCBmAlHEEEYMUcTB+a3wd7QW8P6NmcbwuedG7gggpf4j57wvjGKitYZKDTKODdu2YFGaxhNQOkkwISQYTyCimC9qaduysQl/+PvQ9O1+Kw8kjLz6emVoau+2tta3rkxBSIWMsOHYNmw7KbEkTQKtDaRKsp1zCcaTKDAmlk3ZssGHS01cvRmevt1uRR242n+ieukfY89v8Gicdy3U6xGCIEJQDzEfRJgPwmUK6tGi6o14hTkhwGd7O3Hm1co7184+89N1AQBg+PcnfvbKa3+9dPjRDgghEdSj5ebzt8NEiGIOpfSKufbvasfAO9eq1Xr45Gpeqz+OCaETVy5+9fxfBqt9Bz4C37UhpUrWOOJJtkcMMRMQQmGtQ03vzs0oZAx74+LlU6Nnn50jhKzwW3EiIoRkAOQA+K17vvxYz8f2v/Tk4Uc3DQxO0vdG1j3iAQCKeRfHHuvG5ff+NfenPw/8YvT8qR8DiACEABrGmMV1WgZACCGpeXaht/1SsWP/t58/fvST+8vlcrZyZRIfTNch5PJwEwLctyGLBzpK6G711ctn3xwdvHDmufmxt4YWjJf2JjVeLQLZFGCZyjsOf7yn98jTO7a1bdiyucXzfM9RIGBcIe9aEELqienZePh6NX67Uukfu3j655Cykd75gnmYmkdrLkEK4afGfiovlWtlS4Wm9r0P+i0P7C6UN+/K+l52qjoxFM2OvN0YvzwYT1+dAMBSxSnAopaarwmwZDncFCCTjp10bKWiWCxL0AAUAAlAAOCpWGrOzSpmd/VikgLR1NROdScACUAZY1buyw8L8L9q9/zl9N+8jvZcPWfmCgAAAABJRU5ErkJggg===="
redBall = "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=="
jenkins = "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%%"

snarlConnection = new Socket("localhost", 5233)
snarlConnection << """SNP/3.0\r\nregister?app-sig=${appSignature}&icon-base64=${greenMoon}&title=Green-Moon:Jenkins\r\nEND\r\n"""
notifyConnected()

use (TimerMethods) {
    def timer = new Timer()
    def task = timer.runEvery(10000, 5000) {
        execute()
    }
}

def execute() {
	try {
		def connection = new URL("http://localhost:8080/api/json?depth=1").openConnection()
		//connection.setRequestProperty("Authorization", "Basic .....") 
		
		def data = new JsonSlurper().parseText(connection.content.text)
		data.jobs.findAll{ job -> !ignoredJobs.contains(job.displayName)}.each { job ->
			def cachedJob = cachedJobs[job.displayName]
			def buildNumber = job.builds[0].number
			if (cachedJob != buildNumber) {
				if (job.color == "blue") {
					notifyBlue(job.displayName, buildNumber, job.url)
					cachedJobs[job.displayName] = buildNumber
				}
				else if (job.color == "red") {
					notifyRed(job.displayName, buildNumber, job.url)
					cachedJobs[job.displayName] = buildNumber
				}
			}
		}
		
		if (jenkinsConnected == false) {
			jenkinsConnected = true
			notify("Jenkins connected successfully", "Yippie!", jenkins, "http://www.greenmoonsoftware.com")
		}
		
	}
	catch (java.net.SocketTimeoutException e) {
		noConnectionToJenkins()
	}
	catch (java.net.SocketException e) {
		noConnectionToJenkins()
	}
	catch (java.net.ConnectException e) {
		noConnectionToJenkins()
	}
}

def noConnectionToJenkins() {
	if (jenkinsConnected) {
		notify(1, "Jenkins is down", "Oh snap!", jenkins, "http://www.greenmoonsoftware.com")
		jenkinsConnected = false
	}
}

def notifyConnected() {
	notify("Jenkins monitoring CONNECTED", "Enjoy...", greenMoon, "http://www.greenmoonsoftware.com")
}

def notifyRed(projectName, buildNumber, url) {
	notify(1, projectName, "Build #${buildNumber} broke", redBall, url)
}

def notifyBlue(projectName, buildNumber, url) {
	notify(projectName, "Build #${buildNumber} succeeded", blueBall, url)
}

def notify(title, text, icon, callback) {
	notify(0, title, text, icon, callback)
}

def notify(priority, title, text, icon, callback) {
	snarlConnection << """SNP/3.0\r\nnotify?app-sig=${appSignature}&title=${title}&text=${text}&priority=${priority}&icon-base64=${icon}&callback=${callback}\r\nEND\r\n"""
}

class GroovyTimerTask extends TimerTask {
    Closure closure
    void run() {
        closure()
    }
}

class TimerMethods {
    static TimerTask runEvery(Timer timer, long delay, long period, Closure codeToRun) {
        TimerTask task = new GroovyTimerTask(closure: codeToRun)
        timer.schedule task, delay, period
        task
    }
}
